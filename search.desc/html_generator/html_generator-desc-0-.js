searchState.loadedDescShard("html_generator", 0, "Errors that can occur during configuration.\nContains the error value\nWrite output to a file at the specified path.\nConfiguration options for HTML generation.\nBuilder for constructing <code>HtmlConfig</code> instances.\nError for invalid file path\nError for invalid input size configuration\nError for invalid language code\nConfiguration options for Markdown to HTML conversion.\nContains the success value\nOutput destination for HTML generation.\nResult type alias for library operations\nWrite output to standard output (default).\nWrite output using a custom writer implementation.\nAccessibility-related functionality for HTML processing.\nAutomatically add ARIA attributes for accessibility\nBuilds the configuration, validating all settings.\nCreates a new <code>HtmlConfig</code> using the builder pattern.\nCommon constants used throughout the library.\nEmoji Sequences Loader\nEnable syntax highlighting for code blocks\nThe encoding to use for input/output (defaults to “utf-8…\nError types for HTML generation and processing.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerate structured data (JSON-LD) based on content\nEnable table of contents generation\nHTML generation module for converting Markdown to HTML.\nHTML generation configuration\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLanguage for generated content\nConverts a Markdown file to HTML.\nConverts Markdown content to HTML.\nMaximum size (in bytes) for input content\nMinify the generated HTML output\nCreates a new <code>HtmlConfigBuilder</code> with default options.\nPerformance optimization functionality for HTML processing.\nSearch Engine Optimization (SEO) functionality for HTML …\nTheme to use for syntax highlighting\nUtility functions for HTML and Markdown processing.\nValidates the configuration settings.\nValidates that a language code matches the BCP 47 format …\nSets the language for generated content.\nEnables or disables syntax highlighting for code blocks.\nLevel A: Minimum level of conformance Essential …\nLevel AA: Addresses major accessibility barriers Standard …\nLevel AAA: Highest level of accessibility conformance …\nColor contrast requirements for different WCAG levels\nA comprehensive accessibility check result\nColor contrast issues\nContains the error value\nEnum to represent possible accessibility-related errors.\nImproper heading structure\nError indicating a failure in processing HTML for …\nError indicating the HTML input is too large to process.\nInvalid ARIA attributes\nError indicating an invalid ARIA attribute.\nStructure representing an accessibility issue found in the …\nTypes of accessibility issues that can be detected\nKeyboard navigation issues\nMissing or invalid language declarations\nError indicating malformed HTML input.\nMissing alternative text for images\nMissing form labels\nContains the success value\nResult type alias for accessibility operations.\nWCAG Conformance Levels\nError indicating failure to validate HTML against WCAG …\nAdd ARIA attributes to HTML for improved accessibility.\nWhether to automatically fix issues when possible\nCheck advanced ARIA usage\nTime taken for the check (in milliseconds)\nCheck keyboard navigation\nCheck language attributes\nConstants used throughout the accessibility module\nHTML element where the issue was found\nTotal number of elements checked\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWCAG guideline reference, if applicable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNumber of issues found\nType of accessibility issue\nList of accessibility issues found\nMaximum allowed heading level jump (e.g., 1 means no …\nDescription of the issue\nMinimum required color contrast ratio\nSuggested fix for the issue\nUtility functions for accessibility checks\nValidate HTML against WCAG guidelines with detailed …\nWCAG conformance level to validate against\nWCAG conformance level checked\nThe name of the invalid attribute\nThe problematic HTML fragment, if available\nSpecific WCAG guideline reference\nWCAG conformance level where the error occurred\nMaximum allowed size\nDescription of the error\nDescription of the error\nDescription of the processing error\nDescription of the HTML issue\nActual size of the input\nSource of the error, if available\nDefault ARIA role for buttons\nDefault ARIA role for forms\nDefault ARIA role for inputs\nDefault ARIA role for navigation elements\nMaximum size of HTML input in bytes (1MB)\nDefault language code for HTML generation (British English)\nMaximum allowed input size (5MB) to prevent denial of …\nDefault syntax highlighting theme (github)\nRegular expression pattern for validating language codes\nMaximum file path length\nMinimum required input size (1KB) for meaningful processing\nLoads emoji sequences and their descriptive labels from a …\nAccessibility-related errors.\nContains the error value\nTypes of accessibility-related errors\nError indicating failure in extracting front matter from …\nError indicating a failure in formatting an HTML header.\nIncorrect heading structure\nEnum to represent various errors that can occur during …\nError indicating an input that is too large.\nInvalid ARIA attribute values\nError indicating an invalid front matter format.\nError indicating an invalid header format.\nError indicating an invalid input.\nInvalid input\nError that occurs when structured data is invalid.\nInvalid structured data\nInput/Output errors\nError that occurs during the conversion of Markdown to …\nErrors that occur during HTML minification.\nError indicating failure to minify HTML content.\nMissing alternative text\nMissing ARIA attributes\nMissing description\nMissing form labels\nError indicating that a required HTML element is missing.\nMissing required meta tags\nMissing title\nContains the success value\nOther SEO-related errors\nOther accessibility-related errors\nError indicating a failure during parsing.\nError that occurs when a regular expression fails to …\nType alias for a result using the <code>HtmlError</code> error type.\nError that occurs when parsing a selector fails.\nSEO-related errors.\nTypes of SEO-related errors\nErrors that occur during template rendering.\nA catch-all error for unexpected failures.\nError that occurs when converting from UTF-8 fails.\nError indicating a validation failure.\nCreates a new Accessibility error\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new InputTooLarge error\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new InvalidInput error\nCreates a new MarkdownConversion error\nCreates a new Seo error\nThe problematic element, if available\nThe kind of SEO error\nThe kind of accessibility error\nThe error message\nThe error message\nThe error message\nThe error message\nThe error message\nThe source error, if available\nThe source error, if available\nThe source error, if available\nThe source error, if available\nThe relevant WCAG guideline, if available\nGenerate HTML from Markdown content using <code>mdx-gen</code>.\nConvert Markdown to HTML with specified extensions using …\nProcesses inline Markdown (bold, italics, links, etc.) …\nMaximum allowed file size for minification (10 MB).\nAsynchronously generates HTML from Markdown content.\nSynchronously generates HTML from Markdown content.\nMinifies HTML content from a file with optimized …\nBuilder for constructing meta tags.\nConfiguration options for structured data generation.\nAdds an additional meta tag.\nAdds multiple meta tags at once.\nAdditional key-value pairs to include in the structured …\nAdditional schema.org types to include\nBuilds the meta tags string.\nEscapes HTML special characters in a string.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerates meta tags for SEO purposes.\nGenerates structured data (JSON-LD) for SEO purposes.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>MetaTagsBuilder</code> with default values.\nThe type of webpage (e.g., “WebPage”, “Article”, …\nSets the description for the meta tags.\nSets the title for the meta tags.\nExtracts front matter from Markdown content.\nFormats a header with an ID and class.\nGenerates a table of contents from HTML content.\nCheck if an ARIA role is valid for a given element.\nValidates a language code.")