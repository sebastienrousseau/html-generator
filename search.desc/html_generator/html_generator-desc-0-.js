searchState.loadedDescShard("html_generator", 0, "Error occurred during accessibility enhancements\nContains the error value\nConfiguration options for HTML generation\nError type for HTML generation\nError occurred during Markdown conversion\nError occurred during HTML minification\nContains the success value\nResult type for HTML generation\nError occurred during SEO optimization\nError occurred during template rendering\nThe <code>accessibility</code> module contains functions for improving …\nAutomatically add ARIA attributes for accessibility\nEnable syntax highlighting for code blocks\nThe <code>error</code> module contains error types for HTML generation. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerate structured data (JSON-LD) based on content\nThe <code>generator</code> module contains functions for generating …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMinify the generated HTML output\nThe <code>performance</code> module contains functions for optimizing …\nThe <code>seo</code> module contains functions for optimizing SEO. …\nThe <code>utils</code> module contains utility functions. Utility …\nEnum to represent possible accessibility-related errors.\nContains the error value\nError indicating a failure in processing HTML for …\nError indicating the HTML input is too large to process.\nError indicating an invalid ARIA attribute.\nError indicating malformed HTML input.\nContains the success value\nResult type alias for convenience.\nError indicating failure to validate HTML against WCAG …\nAdd ARIA attributes to HTML for improved accessibility.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nValidate HTML against WCAG (Web Content Accessibility …\nError that occurs when handling accessibility-related …\nContains the error value\nError indicating failure in extracting front matter from …\nError indicating a failure in formatting an HTML header.\nEnum to represent various errors that can occur during …\nError indicating an input that is too large.\nError indicating an invalid front matter format.\nError indicating an invalid header format.\nError indicating an invalid input.\nError that occurs when structured data is invalid.\nError for IO-related issues.\nError that occurs during the conversion of Markdown to …\nError indicating failure to minify HTML content.\nError indicating that a required HTML element is missing.\nContains the success value\nError indicating a failure during parsing.\nError that occurs when a regular expression fails to …\nType alias for a result using the <code>HtmlError</code> error type.\nError that occurs when parsing a selector fails.\nAn SEO-related error.\nError that occurs during SEO optimization.\nA catch-all error for unexpected failures.\nError that occurs when converting from UTF-8 fails.\nError indicating a validation failure.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGenerate HTML from Markdown content using <code>mdx-gen</code>.\nConvert Markdown to HTML with specified extensions using …\nAsynchronously generate HTML from Markdown.\nSynchronously generate HTML from Markdown.\nMinifies a single HTML file.\nEscapes HTML entities in the given string using regex.\nGenerates meta tags for SEO purposes.\nGenerates structured data (JSON-LD) for SEO purposes.\nExtracts front matter from Markdown content.\nFormats a header with an ID and class.\nGenerates a table of contents from HTML content.")